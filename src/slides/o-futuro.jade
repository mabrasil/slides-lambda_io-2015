section

  section.sec-slide(data-background="images/gifs/the-future.gif")

    h1.primary.upper O Futuro

  section.sec-slide(data-background="#2c3e50")

    h1.white.upper.left Linguagens OO
    h5.white.upper.left remando em direção à
    h1.white.upper.left Funcional

  section.sec-slide(data-background="#d35400")

    h1.white.upper C++ (11)

  section.sec-slide.left

    p.fragment ✔ Expressões Lambda
    p.fragment ✔ <i>#include < algorithm > </i>
    p.fragment ✔ Melhorias nas API de collections (map, filter...)

  section.sec-slide(data-background="#d35400")

    h1.white.upper C# (2.0)

  section.sec-slide.left

    p.fragment ✔ Funções de alta ordem

  section.sec-slide(data-background="#d35400")

    h1.white.upper C# (3.0)

  section.sec-slide.left

    p.fragment ✔ LINQ (melhorias nas API de collections)

  section.sec-slide(data-background="#d35400")

    h1.white.upper Java (8)

  section.sec-slide.left

    p.fragment ✔ Expressões Lambda
    p.fragment ✔ Melhorias nas API de collections (map, filter...)

  section.sec-slide(data-background="#2c3e50")

    h1.white.upper.left Nascimento
    h5.white.upper.left de novas
    h1.white.upper.left Linguagens Funcionais

  section.sec-slide(data-background="#d35400")

    h1.white.upper Scala (2001)

  section.sec-slide.left

    p.fragment ✔ Feita para a JVM
    p.fragment ✔ Inspirada em Haskell, Erlang, OCaml, Scheme, Smalltalk, Java...
    p.fragment ✔ Híbrida (OO + Funcional)
    p.fragment ✔ <i>"Mais OO que Java"</i>
    p.fragment ✔ Interoperar com Java

  section.sec-slide(data-background="#d35400")

    h1.white.upper F# (2005)

  section.sec-slide.left

    p.fragment ✔ Feita para a plataforma .NET
    p.fragment ✔ Inspirada em Standard ML, ML, Haskell, Erlang, OCaml, Scala, Smalltalk, Python, C♯...
    p.fragment ✔ Híbrida, voltada para funcional

  section.sec-slide(data-background="#d35400")

    h1.white.upper Clojure (2007)

  section.sec-slide.left

    p.fragment ✔ Feita para a JVM - e a CLR
    p.fragment ✔ Inspirada em Lisp, Prolog, ML, Haskell, Erlang...
    p.fragment ✔ Voltada para funcional

  section.sec-slide(data-background="#d35400")

    h1.white.upper Elixir (2012)

  section.sec-slide.left

    p.fragment ✔ Feita para a EVM (BEAM)
    p.fragment ✔ Inspirada em Erlang, Clojure, Ruby...
    p.fragment ✔ Erlang + Ruby = ?
    p.fragment ✔ Voltada para funcional
    p.fragment ✔ Conceitos bem funcionais...
    p.fragment ✔ Nascida em território nacional \o/

  section.sec-slide(data-background="#2c3e50")

    h1.white.upper.left Crescimento de comunidades
    h5.white.upper.left de antigas
    h1.white.upper.left Linguagens Funcionais

  section.sec-slide

    h2 Confs... Confs everywhere...

    .col-3.fragment
      img(src="images/confs/haskell.png", alt="Haskell")
      p Haskell
    .col-3.fragment
      img(src="images/confs/erlang.jpg", alt="Erlang")
      p Erlang

    h2.fragment ...

  section.sec-slide(data-background="images/gifs/the-future.jpg")

    h1.primary.upper Tem mais
    h4.primary.upper sobre
    h1.primary.upper O futuro

  section.sec-slide

    img(src="images/other/lambda-io.png", alt="The Lambda I/O Foundation", width="30%")

  section.sec-slide.left

    p.fragment ✔ Distribuição/Descentralização
    p.fragment ✔ Rotatividade pelo fim da doutrinação
    p.fragment ✔ Promover o paradigma, suas linguagens e conceitos pelos quatro cantos do país
    p.fragment ✔ Conferência ao final de um ciclo

  section.sec-slide

    img(src="images/other/lambda-io-manifest.png", alt="The Lambda I/O Foundation")
